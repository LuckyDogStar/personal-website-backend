AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  personal-project-website
  
  Sample SAM Template for personal-project-website

Globals:
  Function:
    Timeout: 5

Parameters:
  HostedZoneParameter:
    Type: String
    Description: The hosted zone for the Route53 records
    Default: "Z0362528N1HUG75PL3D0"
  ApiDomainNameParameter:
    Type: String
    Description: The subdomain of the API
    Default: "api."
  DomainNameParameter:
    Type: String
    Description: The website domain
    Default: "ryandriver.me"

Resources:
  PersonalProjectWebsite:
    Type: AWS::S3::Bucket
    Properties:
     AccessControl: PublicRead
     WebsiteConfiguration:
       IndexDocument: index.html
     BucketName: personal-project-website

  PersonalSiteCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainNameParameter
      ValidationMethod: DNS
      SubjectAlternativeNames:
       - !Join ["", ["*.", !Ref DomainNameParameter]]
     

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: personal-site
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"

  PersonalWebsite:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: !Ref PersonalSiteCertificate
          SslSupportMethod: sni-only
        Aliases:
          - !Ref DomainNameParameter
          - !Join ["", ["*.", !Ref DomainNameParameter]]
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: personal-project-website.s3.us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: personal-project-website.s3.us-east-1.amazonaws.com
            Id: personal-project-website.s3.us-east-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: "true"
        DefaultRootObject: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref PersonalProjectWebsite
                - /*
      Bucket: !Ref PersonalProjectWebsite

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Domain:
        DomainName:
          !Join ["", [!Ref ApiDomainNameParameter, !Ref DomainNameParameter]]
        CertificateArn: !Ref PersonalSiteCertificate
        Route53:
          HostedZoneId:
            Ref: HostedZoneParameter
      
  GetFunction:
    Type: AWS::Serverless::Function 
    Properties:      
      Policies:
       - DynamoDBCrudPolicy:
            TableName: personal-site
      CodeUri: get-function/
      Handler: get-function
      Runtime: go1.x
      Tracing: Active 
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /get
            Method: GET
            RestApiId:
             Ref: ApiGatewayApi

  PutFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Policies:
       - DynamoDBCrudPolicy:
            TableName: personal-site
      CodeUri: put-function/
      Handler: put-function
      Runtime: go1.x
      Tracing: Active 
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /put
            Method: GET
            RestApiId:
             Ref: ApiGatewayApi

